/*!

    \page crontab meccanismi di esecuzione pianificata del framework

    Descrizione dei meccanismi di esecuzione pianificata del framework.

    introduzione
    ============
    GlisWeb dispone di un potente e flessibile sistema di esecuzione pianificata, che appoggiandosi al
    cron di sistema garantisce un'elevatissima affidabilità e prestazioni elevate. Dal lato del sistema,
    una riga di /etc/crontab oppure uno script in /etc/cron.d/ che può essere installato anche tramite
    lo script _src/_sh/_crontab.install.sh devono richiamare l'API _src/_api/_cron.php del framework
    ogni minuto. L'API si occuperà di controllare sulle tabelle *task* e *job* quali compiti vanno eseguiti
    e provvederà a sbrigarli di conseguenza.

    Come accennato, il meccanismo di esecuzione pianificata si articola su due diverse strategie,
    rappresentate rispettivamente dai task e dai job. Da un lato i primi rappresentano un lavoro
    puntuale, eseguito ad ogni chiamata senza cognizione del contesto complessivo delle cose da fare;
    e di conseguenza la natura stessa del task è quella di coincidere con la singola chiamata.
    Dall'altra parte, i job rappresentano lavori pianificati con un inizio e una fine e un'estensione
    predeterminata, in quanto hanno cognizione del contesto globale del compito da svolgere.

    Un esempio di task è la gestione delle code della posta; ad ogni chiamata, il task controlla se c'è
    almeno una mail da inviare, se sì la invia, dopodiché termina, senza preoccuparsi di quante mail da
    inviare ci siano nel complesso (perché è irrilevante dal suo punto di vista). Viceversa, un esempio
    di job è l'importazione dell'elenco aggiornato dei comuni italiani; in questo caso, il job prima
    scarica l'intero elenco dei comuni, poi pianifica il numero di esecuzioni necessarie per importarlo,
    dopodiché ad ogni chiamata successiva esegue una parte del lavoro sapendo quanto ha già fatto e
    quanto manca al completamento del compito, infine quando ha terminato l'importazione finisce e
    registra la chiusura del procedimento.
    
    lo script di appoggio in /etc/cron.d/
    -------------------------------------
    Ad ogni chiamata, l'API _src/_api/_cron.php ricava dalle tabelle *task* e *job* l'elenco delle cose
    da fare, utilizzando un meccanismo di lock software basato su token per evitare la concorrenza. Prima
    vengono eseguiti i task, e successivamente vengono fatti avanzare i job.

    Le informazioni rilevanti sul lavoro dell'API vengono salvate rispettivamente sotto le chiavi $cf['cron']['task']
    e $cf['cron']['job'], inoltre un log specifico per la tracciatura degli esiti di tali lavorazioni è
    tenuto in var/log/cron/ e specificamente il dettaglio dell'ultima esecuzione è contenuto in var/log/latest/cron.latest.log.

    struttura e gestione dei task
    =============================



    struttura e gestione dei job
    ============================



*/
